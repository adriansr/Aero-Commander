<?xml version="1.0"?>
 
<!-- Improved Generic Autopilot -->
<!-- Joshua Davidson (it0uchpods) -->


<PropertyList>

  <!-- =============================================================== -->
  <!-- Roll Axis Modes                                                 -->
  <!-- =============================================================== -->

  <!-- Wing leveler --> 
  <pid-controller>
    <name>Wing Leveler (Turn Coordinator based)</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/heading</property>
      <value>wing-leveler</value>
    </enable>
    <input>
      <property>/orientation/roll-deg</property>
    </input>
    <reference>
      <value>0.0</value>
    </reference>
    <output>
      <property>/controls/flight/aileron-ap</property>
    </output>
    <config>
      <Kp>0.04</Kp>       <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>5.0</Ti>        <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-0.5</u_min> <!-- minimum output clamp -->
      <u_max>0.5</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- Heading Bug Hold.  2 stage cascade controller. -->

  <!-- Stage #1 sets target roll based on diff between current heading -->
  <!-- and heading bug. -->
  <pi-simple-controller>
    <name>Heading Bug Hold (DG based) Stage 1</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/heading</property>
      <value>dg-heading-hold</value>
    </enable>
    <input>
      <property>/autopilot/internal/heading-bug-error-deg</property>
      <scale>1.5</scale>
    </input>
    <reference>
      <value>0.0</value>
    </reference>
    <output>
      <property>/autopilot/internal/target-roll-deg</property>
    </output>
    <config>
      <Kp>-1.9</Kp>    <!-- proportional gain -->
      <Ki>0.0</Ki>     <!-- integral gain -->
      <min>-20.0</min> <!-- minimum output clamp -->
      <max>20.0</max>  <!-- maximum output clamp -->
    </config>
  </pi-simple-controller>

  <!-- Stage #2 drives the ailerons to achieve the desired roll deg. -->
  <pid-controller>
    <name>Heading Bug Hold (DG based) Stage 2</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/heading</property>
      <value>dg-heading-hold</value>
    </enable>
    <input>
      <property>/orientation/roll-deg</property>
    </input>
    <reference>
      <property>/autopilot/internal/target-roll-deg</property>
    </reference>
    <output>
      <property>/controls/flight/aileron-ap</property>
    </output>
    <config>
      <Kp>0.04</Kp>       <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>5.0</Ti>        <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-0.5</u_min> <!-- minimum output clamp -->
      <u_max>0.5</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- True Heading hold.  2 stage cascade controller. -->

  <!-- Stage #1 sets target roll based on diff between current heading -->
  <!-- and target heading. -->
  <pi-simple-controller>
    <name>True Heading Hold (DG based) Stage 1</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/heading</property>
      <value>true-heading-hold</value>
    </enable>
    <input>
      <property>/autopilot/internal/true-heading-error-deg</property>
      <scale>1.5</scale>
    </input>
    <reference>
      <value>0.0</value>
    </reference>
    <output>
      <property>/autopilot/internal/target-roll-deg</property>
    </output>
    <config>
      <Kp>-1.9</Kp>    <!-- proportional gain -->
      <Ki>0.0</Ki>     <!-- integral gain -->
      <min>-20.0</min> <!-- minimum output clamp -->
      <max>20.0</max>  <!-- maximum output clamp -->
    </config>
  </pi-simple-controller>

  <!-- Stage #2 drives the ailerons to achieve the desired roll deg. -->
  <pid-controller>
    <name>True Heading Hold (DG based) Stage 2</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/heading</property>
      <value>true-heading-hold</value>
    </enable>
    <input>
      <property>/orientation/roll-deg</property>
    </input>
    <reference>
      <property>/autopilot/internal/target-roll-deg</property>
    </reference>
    <output>
      <property>/controls/flight/aileron-ap</property>
    </output>
    <config>
      <Kp>0.04</Kp>       <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>5.0</Ti>        <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-0.5</u_min> <!-- minimum output clamp -->
      <u_max>0.5</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- Nav1 hold.  2 stage cascade controller. -->

  <!-- Stage #1 sets target roll based on diff between current heading -->
  <!-- and target heading. -->
  <pid-controller>
    <name>Nav1 Hold Stage 1</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/heading</property>
      <value>nav1-hold</value>
    </enable>
    <input>
      <property>/autopilot/internal/nav1-heading-error-deg</property>
    </input>
    <reference>
      <value>0.0</value>
    </reference>
    <output>
      <property>/autopilot/internal/target-roll-deg</property>
    </output>
    <config>
      <Kp>-5.0</Kp>        <!-- proportional gain -->
      <beta>1.0</beta>     <!-- input value weighing factor -->
      <alpha>0.1</alpha>   <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>   <!-- input value weighing factor for -->
                           <!-- unfiltered derivative error -->
      <Ti>10.0</Ti>        <!-- integrator time -->
      <Td>0.00001</Td>     <!-- derivator time -->
      <u_min>-20.0</u_min> <!-- minimum output clamp -->
      <u_max>20.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- Stage #2 drives the ailerons to achieve the desired roll deg. -->
  <pid-controller>
    <name>Nav1 Hold Stage 2</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/heading</property>
      <value>nav1-hold</value>
    </enable>
    <input>
      <property>/orientation/roll-deg</property>
    </input>
    <reference>
      <property>/autopilot/internal/target-roll-deg</property>
    </reference>
    <output>
      <property>/controls/flight/aileron-ap</property>
    </output>
    <config>
      <Kp>0.04</Kp>       <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>5.0</Ti>        <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-0.5</u_min> <!-- minimum output clamp -->
      <u_max>0.5</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>
  
	<filter>
		<name>IT-CONTROLLER: ROLL CMD</name>
		<debug>false</debug>
		<feedback-if-disabled>true</feedback-if-disabled>
		<initialize-to>output</initialize-to>
		<enable>
			<condition>
				<or>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>wing-leveler</value>
					</equals>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>dg-heading-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>true-heading-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/heading</property>
						<value>nav1-hold</value>
					</equals>
				</or>
			</condition>
		</enable>
		<input>
			<property>/controls/flight/aileron-ap</property>
		</input>
		<output>/controls/flight/aileron</output>
		<type>noise-spike</type>
		<max-rate-of-change>0.4</max-rate-of-change>
	</filter>

 <!-- =============================================================== -->
 <!-- Pitch Axis Modes                                                -->
 <!-- =============================================================== -->

 <!-- Simple pitch hold --> 
 <pid-controller>
    <name>Pitch hold</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/altitude</property>
      <value>pitch-hold</value>
    </enable>
    <input>
      <property>/orientation/pitch-deg</property>
    </input>
    <reference>
      <property>/autopilot/settings/target-pitch-deg</property>
    </reference>
    <output>
      <property>/controls/flight/elevator-trim-ap</property>
    </output>
    <config>
      <Kp>-0.03</Kp>      <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>10.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-1.0</u_min> <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
   </pid-controller>

 <!-- Simple angle of attack hold --> 
 <pid-controller>
    <name>AOA hold</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/altitude</property>
      <value>aoa-hold</value>
    </enable>
    <input>
      <property>/orientation/alpha-deg</property>
    </input>
    <reference>
      <property>/autopilot/settings/target-aoa-deg</property>
    </reference>
    <output>
      <property>/controls/flight/elevator-trim-ap</property>
    </output>
    <config>
      <Kp>-0.05</Kp>      <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>0.5</Ti>        <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-1.0</u_min> <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- Altitude hold.  2 stage cascade controller. -->

  <!-- Stage #1 sets target rate of climb based on diff between current alt -->
  <!-- and target altitude. -->
	<predict-simple>
		<name>ALTITUDE 5 SECONDS AHEAD</name>
		<debug>false</debug>
		<input>/instrumentation/altimeter/indicated-altitude-ft</input>
		<output>/autopilot/internal/altitude-5-sec-ahead</output>
		<seconds>5.0</seconds>
		<filter-gain>0.0</filter-gain>
	</predict-simple>
  
	<filter>
		<name>ALTITUDE CAPTURE/HOLD</name>
		<debug>false</debug>
		<type>gain</type>
		<enable>
			<property>/autopilot/locks/altitude</property>
			<value>altitude-hold</value>
		</enable>
		<input>
			<property>/autopilot/internal/altitude-5-sec-ahead</property>
		</input>
		<reference>
			<property>/autopilot/settings/target-altitude-ft</property>
		</reference>
		<gain>-8</gain>
		<output>
			<property>/autopilot/internal/target-climb-rate-fpm</property>
		</output>
		<min>-1000</min>
		<max>1000</max>
	</filter>

  <!-- Stage #2 drives the elevator to achieve the desired climb rate. -->
  <pid-controller>
    <name>Altitude Hold (Altimeter based) Stage 2</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/altitude</property>
      <value>altitude-hold</value>
    </enable>
    <input>
      <property>/velocities/vertical-speed-fps</property>
    </input>
    <reference>
      <property>/autopilot/internal/target-climb-rate-fpm</property>
      <scale>0.01667</scale>
    </reference>
    <output>
      <property>/controls/flight/elevator-trim-ap</property>
    </output>
    <config>
      <Kp>-0.01</Kp>      <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>5.0</Ti>        <!-- integrator time -->
      <Td>0.0001</Td>     <!-- derivator time -->
      <u_min>-1.0</u_min> <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- AGL hold.  2 stage cascade controller. -->

  <!-- Stage #1 sets target rate of climb based on diff between current agl -->
  <!-- and target agl. -->
	<predict-simple>
		<name>AGL ALTITUDE 5 SECONDS AHEAD</name>
		<debug>false</debug>
		<input>/position/altitude-agl-ft</input>
		<output>/autopilot/internal/agl-altitude-5-sec-ahead</output>
		<seconds>5.0</seconds>
		<filter-gain>0.0</filter-gain>
	</predict-simple>
  
	<filter>
		<name>ALTITUDE CAPTURE/HOLD</name>
		<debug>false</debug>
		<type>gain</type>
		<enable>
			<property>/autopilot/locks/altitude</property>
			<value>agl-hold</value>
		</enable>
		<input>
			<property>/autopilot/internal/agl-altitude-5-sec-ahead</property>
		</input>
		<reference>
			<property>/autopilot/settings/target-agl-ft</property>
		</reference>
		<gain>-8</gain>
		<output>
			<property>/autopilot/internal/target-climb-rate-fpm</property>
		</output>
		<min>-1000</min>
		<max>1000</max>
	</filter>

  <!-- Stage #2 drives the elevator to achieve the desired climb rate. -->
  <pid-controller>
    <name>AGL Hold (Altimeter based) Stage 2</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/altitude</property>
      <value>agl-hold</value>
    </enable>
    <input>
      <property>/velocities/vertical-speed-fps</property>
    </input>
    <reference>
      <property>/autopilot/internal/target-climb-rate-fpm</property>
      <scale>0.01667</scale>
    </reference>
    <output>
      <property>/controls/flight/elevator-trim-ap</property>
    </output>
    <config>
      <Kp>-0.01</Kp>      <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>5.0</Ti>        <!-- integrator time -->
      <Td>0.0001</Td>     <!-- derivator time -->
      <u_min>-1.0</u_min> <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- Glideslope hold. -->

  <!-- Stage #2 drives the elevator to achieve the desired climb rate. -->
  <pid-controller>
    <name>Glideslop Hold</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/altitude</property>
      <value>gs1-hold</value>
    </enable>
    <input>
      <property>/velocities/vertical-speed-fps</property>
    </input>
    <reference>
      <property>/instrumentation/nav[0]/gs-rate-of-climb</property>
    </reference>
     <output>
      <property>/controls/flight/elevator-trim-ap</property>
    </output>
    <config>
      <Kp>-0.01</Kp>      <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>5.0</Ti>        <!-- integrator time -->
      <Td>0.0001</Td>     <!-- derivator time -->
      <u_min>-1.0</u_min> <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>

  <!-- vertical speed hold -->
  <pid-controller>
    <name>Vertical Speed Hold</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/altitude</property>
      <value>vertical-speed-hold</value>
    </enable>
    <input>
      <property>/velocities/vertical-speed-fps</property>
    </input>
    <reference>
      <property>/autopilot/settings/vertical-speed-fpm</property>
      <scale>0.01667</scale>
    </reference>
    <output>
      <property>/controls/flight/elevator-trim-ap</property>
    </output>
    <config>
      <Kp>-0.01</Kp>      <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>5.0</Ti>        <!-- integrator time -->
      <Td>0.0001</Td>     <!-- derivator time -->
      <u_min>-1.0</u_min> <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>
  
 <!-- Hold speed by varying pitch trim (Two stage cascading controller) --> 
	<predict-simple>
		<name>IAS 10 SECOND PREDICTOR</name>
		<debug>false</debug>
		<input>/instrumentation/airspeed-indicator/indicated-speed-kt</input>
		<output>/autopilot/internal/lookahead-10-sec-airspeed-kt</output>
		<seconds>10.0</seconds>
		<filter-gain>0.0</filter-gain>
	</predict-simple>
	
 <pid-controller>
    <name>Speed hold (vary pitch trim) Stage #1</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/speed</property>
      <value>speed-with-pitch-trim</value>
    </enable>
    <input>
      <property>/autopilot/internal/lookahead-10-sec-airspeed-kt</property>
    </input>
    <reference>
      <property>/autopilot/settings/target-speed-kt</property>
    </reference>
    <output>
      <property>/autopilot/internal/target-pitch-deg</property>
    </output>
    <config>
      <Kp>-0.2</Kp>       <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>2.5</Ti>        <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-15.0</u_min><!-- minimum output clamp -->
      <u_max>15.0</u_max> <!-- maximum output clamp -->
    </config>
  </pid-controller>

 <pid-controller>
    <name>Speed hold (vary pitch trim) Stage #2</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/speed</property>
      <value>speed-with-pitch-trim</value>
    </enable>
    <input>
      <property>/orientation/pitch-deg</property>
    </input>
    <reference>
      <property>/autopilot/internal/target-pitch-deg</property>
    </reference>
    <output>
      <property>/controls/flight/elevator-trim-ap</property>
    </output>
    <config>
      <Kp>-0.05</Kp>      <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>1.0</Ti>        <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>-1.0</u_min> <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>
  
	<filter>
		<name>IT-CONTROLLER: PITCH CMD</name>
		<debug>false</debug>
		<feedback-if-disabled>true</feedback-if-disabled>
		<initialize-to>output</initialize-to>
		<enable>
			<condition>
				<or>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>pitch-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>aoa-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>altitude-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>agl-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>gs1-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>vertical-speed-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/speed</property>
						<value>speed-with-pitch-trim</value>
					</equals>
				</or>
			</condition>
		</enable>
		<input>
			<property>/controls/flight/elevator-trim-ap</property>
		</input>
		<output>/controls/flight/elevator-trim</output>
		<type>noise-spike</type>
		<max-rate-of-change>0.35</max-rate-of-change>
	</filter>
	
	<filter>
		<name>IT-CONTROLLER: PITCH ZERO</name>
		<debug>false</debug>
		<feedback-if-disabled>true</feedback-if-disabled>
		<initialize-to>output</initialize-to>
		<enable>
			<condition>
				<or>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>pitch-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>aoa-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>altitude-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>agl-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>gs1-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/altitude</property>
						<value>vertical-speed-hold</value>
					</equals>
					<equals>
						<property>/autopilot/locks/speed</property>
						<value>speed-with-pitch-trim</value>
					</equals>
				</or>
			</condition>
		</enable>
		<input>
			<value>0</value>
		</input>
		<output>/controls/flight/elevator</output>
		<type>noise-spike</type>
		<max-rate-of-change>0.8</max-rate-of-change>
	</filter>

 <!-- =============================================================== -->
 <!-- Velocity Modes                                                  -->
 <!-- =============================================================== -->

 <!-- Auto throttle --> 
 <pid-controller>
    <name>Auto Throttle (5 sec lookahead)</name>
    <debug>false</debug>
    <enable>
      <property>/autopilot/locks/speed</property>
      <value>speed-with-throttle</value>
    </enable>
    <input>
      <property>/instrumentation/airspeed-indicator/indicated-speed-kt</property>
    </input>
    <reference>
      <property>/autopilot/settings/target-speed-kt</property>
    </reference>
    <output>
      <property>/controls/engines/throttle-cmd</property>
    </output>
    <config>
      <Kp>0.07</Kp>       <!-- proportional gain -->
      <beta>1.0</beta>    <!-- input value weighing factor -->
      <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
      <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                          <!-- unfiltered derivative error -->
      <Ti>10.0</Ti>       <!-- integrator time -->
      <Td>0.00001</Td>    <!-- derivator time -->
      <u_min>0.0</u_min>  <!-- minimum output clamp -->
      <u_max>1.0</u_max>  <!-- maximum output clamp -->
    </config>
  </pid-controller>
  
	<filter>
		<name>IT-CONTROLLER: THROTTLE CMD</name>
		<debug>false</debug>
		<feedback-if-disabled>true</feedback-if-disabled>
		<initialize-to>output</initialize-to>
		<enable>
			<condition>
				<equals>
					<property>/autopilot/locks/speed</property>
					<value>speed-with-throttle</value>
				</equals>
			</condition>
		</enable>
		<input>
			<property>/controls/engines/throttle-cmd</property>
		</input>
			<output>
			<property>/controls/engines/engine[0]/throttle</property>
			<property>/controls/engines/engine[1]/throttle</property>
			<property>/controls/engines/engine[2]/throttle</property>
			<property>/controls/engines/engine[3]/throttle</property>
			<property>/controls/engines/engine[4]/throttle</property>
			<property>/controls/engines/engine[5]/throttle</property>
			<property>/controls/engines/engine[6]/throttle</property>
			<property>/controls/engines/engine[7]/throttle</property>
		</output>
		<type>noise-spike</type>
		<max-rate-of-change>0.5</max-rate-of-change>
	</filter>

</PropertyList>
